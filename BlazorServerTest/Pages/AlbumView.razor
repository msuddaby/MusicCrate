@page "/album/{AlbumId:int}"
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationDbContext> context

@if (@album == null)
{
    <p>Loading...</p>
}
else
{
    <div class="album-display">
        <div class="album-art">
            <img src="https://upload.wikimedia.org/wikipedia/en/8/86/Geogaddi.jpg" />
        </div>
        
        <div class="album-info">
            <h3>@album.Title</h3>
            <p>@album.Description</p>
            <p><b>Artists:</b> 
                @foreach (var artist in album.Artists)
                {
                    <span>@artist.Name</span>
                }    
            </p>
            <p><b>Release Date:</b> @album.ReleaseDate</p>
        </div>



    </div>

            <h3>Reviews</h3>
        <a href="/album/@AlbumId/review">Create Review</a>
    @foreach (var review in album.Reviews)
    {
        <p><b>Reviewed by:</b> @review.User.UserName</p>
        <small>@review.Stars Stars</small>
        <p>@review.Body</p>
        <p>Posted: @review.PostTime</p>

    }
}


@code {
    [Parameter] public int AlbumId { get; set; }


    private Album album;

    protected async override Task OnInitializedAsync()
    {
        using (var ctx = context.CreateDbContext())
        {
            var result = await ctx.Albums.Where(x => x.Id == AlbumId).Include(x => x.Artists).Include(x => x.Reviews).ThenInclude(x => x.User).FirstOrDefaultAsync();
            if (result != null)
            {
                result.Reviews.Reverse();
                album = result;
            }

        }
    }
}
